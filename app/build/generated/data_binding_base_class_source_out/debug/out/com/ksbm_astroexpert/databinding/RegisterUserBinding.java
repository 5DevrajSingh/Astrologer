// Generated by data binding compiler. Do not edit!
package com.ksbm_astroexpert.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.ksbm_astroexpert.R;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class RegisterUserBinding extends ViewDataBinding {
  @NonNull
  public final TextView dob;

  @NonNull
  public final EditText email;

  @NonNull
  public final RadioButton female;

  @NonNull
  public final EditText lastname;

  @NonNull
  public final RadioButton male;

  @NonNull
  public final EditText mobile;

  @NonNull
  public final EditText name;

  @NonNull
  public final EditText placeofbirth;

  @NonNull
  public final RadioGroup radiogroup;

  @NonNull
  public final Button register;

  @NonNull
  public final TextView skip;

  @NonNull
  public final TextView textsign;

  @NonNull
  public final TextView textsign1;

  @NonNull
  public final TextView timeofbith;

  protected RegisterUserBinding(Object _bindingComponent, View _root, int _localFieldCount,
      TextView dob, EditText email, RadioButton female, EditText lastname, RadioButton male,
      EditText mobile, EditText name, EditText placeofbirth, RadioGroup radiogroup, Button register,
      TextView skip, TextView textsign, TextView textsign1, TextView timeofbith) {
    super(_bindingComponent, _root, _localFieldCount);
    this.dob = dob;
    this.email = email;
    this.female = female;
    this.lastname = lastname;
    this.male = male;
    this.mobile = mobile;
    this.name = name;
    this.placeofbirth = placeofbirth;
    this.radiogroup = radiogroup;
    this.register = register;
    this.skip = skip;
    this.textsign = textsign;
    this.textsign1 = textsign1;
    this.timeofbith = timeofbith;
  }

  @NonNull
  public static RegisterUserBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.register_user, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static RegisterUserBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<RegisterUserBinding>inflateInternal(inflater, R.layout.register_user, root, attachToRoot, component);
  }

  @NonNull
  public static RegisterUserBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.register_user, null, false, component)
   */
  @NonNull
  @Deprecated
  public static RegisterUserBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<RegisterUserBinding>inflateInternal(inflater, R.layout.register_user, null, false, component);
  }

  public static RegisterUserBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static RegisterUserBinding bind(@NonNull View view, @Nullable Object component) {
    return (RegisterUserBinding)bind(component, view, R.layout.register_user);
  }
}
